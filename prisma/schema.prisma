generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum TokenStatus {
  APPROVED
  UNKNOWN
  DISAPPROVED
}

enum PoolVersion {
  V3
  V2
  V1
}

enum PoolType {
  CONCENTRATED_LIQUIDITY_POOL
  STABLE_POOL
  CONSTANT_PRODUCT_POOL
}

model Token {
  id       String      @id // chainId:address
  address  String
  chainId  Int
  name     String
  symbol   String
  decimals String
  status   TokenStatus @default(UNKNOWN)

  derivedUSD    Decimal?
  derivedNative Decimal?

  generatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  pools0 Pool[] @relation("token0")
  pools1 Pool[] @relation("token1")

  @@unique([chainId, address])
  @@index(fields: [id])
  @@index(fields: [address])
  @@index(fields: [chainId])
  @@index(fields: [address, chainId])
  @@index(fields: [chainId, status])
  @@index(fields: [chainId, status, derivedUSD])
  @@index(fields: [chainId, status, derivedNative])
}

model Pool {
  id            String  @id // address
  address       String
  name          String?
  chainId       Int
  version       PoolVersion  @default(V2)
  type          PoolType     @default(CONSTANT_PRODUCT_POOL)
  isWhitelisted Boolean @default(false)
  token0        Token   @relation("token0", fields: [token0Id], references: [id])
  token0Id      String
  token1        Token   @relation("token1", fields: [token1Id], references: [id])
  token1Id      String

  fee      Float
  reserve0     String  @default("0")
  reserve1     String  @default("0")
  liquidityUSD Decimal?

  generatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index(fields: [id])
  @@index(fields: [isWhitelisted])
  @@index(fields: [chainId])
  @@index(fields: [address])
  @@index(fields: [chainId, version, type])
  @@index(fields: [token0Id])
  @@index(fields: [token1Id])
  @@index(fields: [generatedAt])
}